@startuml Repositories
skinparam groupInheritance 2

interface IRepository<T, TId> {
    Task<IEnumerable<T>> FindAllAsync()
    Task<T?> FindByIdAsync(TId id)
}

interface ICRUDRepository<T, TId> {
    Task<TId> CreateAsync(T model)
    Task UpdateAsync(T model)
    Task RemoveAsync(TId id)
}
IRepository <|-- ICRUDRepository : extends

interface IUserRepository {
    Task<int> CreateUserAsync(User user, string passwordHash)
    Task UpdateAsync(User user)
    Task RemoveAsync(int id)
    Task<bool> CheckPasswordAsync(string passwordHash)
    Task<string> GetUserSaltAsync(int userId)
}
IRepository <|-- IUserRepository : extends, T=User, TId=int

interface ITeamRepository {
    Task<IEnumerable<Team>> FindUserTeamAsync(int userId)
}
ICRUDRepository <|-- ITeamRepository : extends, T=Team, TId=int

interface IPlayerRepository {
    Task<IEnumerable<Player>> FindPlayersNotInTeamAsync(int teamId, string nameQuery = null, int positionId = 0, int clubId = 0)
}
ICRUDRepository <|-- IPlayerRepository : extends, T=Player, TId=int

interface IClubRepository {
    Task<IEnumerable<Club>> FindClubsInCompetitionAsync(int competitionId)
}
ICRUDRepository <|-- IClubRepository : extends, T=Club, TId=int

interface ICompetitionRepository {
}
ICRUDRepository <|-- ICompetitionRepository : extends, T=Competition, TId=int

@enduml 